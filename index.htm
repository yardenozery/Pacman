<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="style.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
</head>

<body id="bod">

    <div id="header">
    </div>

    <div id="menu">
        <li id="menuW" onclick="showWelcome()"><a href="#">Welcome</a></li>
        <li id="menuR" onclick="showRegister()"><a href="#">Register</a></li>
        <li id="menuL" onclick="showLogin()"><a href="#">Login</a></li>
        <li id="menuA"><a href="#">About</a></li>
    </div>

    <div id="content">

        <div id="game">
            SCORE:
            <input id="lblScore" type="text" />
            TIME:
            <input id="lblTime" type="text" />
            <br />
            USER:
            <input id="lblUser" type="text" />
            lives:
            <input id="lblLives" type="text" />
            <button onclick="showGame()" style="background-color:#D8D8D8; height: 20px; padding: 0px 0px; color: darkorange" >New Game</button>
            <br />
            <canvas id="canvas" height="600" width="600"></canvas>
            <audio id="music" src="audio/song.mp3" autostart="true"/>
            <audio id="win" src="audio/win.mp3" autostart="true"/>
            <audio id="lose" src="audio/lose.mp3" autostart="true"/>
            <audio id="dracarys" src="audio/dracarys.mp3" autostart="true"/>
        </div>

        <div id="welcome">
            <img src="gallery/welcome.png" height="400" width="600">
            <button onclick="showRegister()">Register</button>
            <button onclick="showLogin()">Login</button>
        </div>

        <div id="register">
                <div class="container">
                    <h1>Register</h1>
                    <p>Please fill in this form to create an account.</p>
                    <hr>
                    <label><b>Username</b></label>
                    <input id="username" type="text" placeholder="Enter Username">
                    <br />
                    <label><b>Password</b></label>
                    <input id="password" type="password" placeholder="Enter Password">
                    <br />
                    <label><b>First name</b></label>
                    <input id="firstName" placeholder="Enter first name">
                    <br />
                    <label><b>Last name</b></label>
                    <input id="lastName" placeholder="Enter last name">
                    <br />
                    <label><b>Email</b></label>
                    <input id="email" placeholder="Enter email" >
                    <br />
                    <label><b>Birthday</b></label>
                    <input id="birthday">
                    <hr>

                    <button type="button" onclick="addNewUser()" class="registerbtn">Register</button>
                </div>

                <div class="container signin">
                    <p>Already have an account? <a onclick="showLogin()" href="#">Login</a>.</p>
                </div>
        </div>

        <div id="login">
                <div class="container">
                    <h1>Login</h1>
                    <hr>
                    <label><b>Username</b></label>
                    <input id="username_login" type="text" placeholder="Enter Username" required>
                    <br />
                    <label><b>Password</b></label>
                    <input id="password_login" type="password" placeholder="Enter Password" required>
                    <hr>

                    <button type="button" onclick="login()" >Login</button>
                </div>

                <div class="container signin">
                    <p>Still dont have an account? <a onclick="showRegister()" href="#">Register</a>.</p>
                </div>
        </div>



        <div id="settings">
            <h3>Please fill the settings for the game:</h3>
            <input type="color" id="5Ball" value="#0101DF">
            <label for="5Ball">5 points ball color</label>
            <br />
            <input type="color" id="15Ball" value="#40FF00">
            <label for="15Ball">15 points ball color</label>
            <br />
            <input type="color" id="25Ball" value="#FF8000">
            <label for="25Ball">25 points ball color</label>
            <br />
            <br />
            <label><b>Number of balls</b></label>
            <input id="NumOfBalls" type="number" value="50" min="50" max="90">
            <br />
            <br />
            <label><b>Time for the game (in seconds)</b></label>
            <input id="gameTime" type="number" value="60" min="60">
            <br />
            <br />
            <label><b>Number of monsters</b></label>
            <input id="NumOfMonsters" type="number" value="1" min="1" max="3">
            <br />
            <br />
            <label><b>Up key</b></label>
            <input id="upKey" type="text" value="ArrowUp" onkeyup="chooseUpKey(window.event)" readonly>
            <br />
            <br />
            <label><b>Down key</b></label>
            <input id="downKey" type="text" value="ArrowDown" onkeyup="chooseDownKey(window.event)" readonly>
            <br />
            <br />
            <label><b>Left key</b></label>
            <input id="leftKey" type="text" value="ArrowLeft" onkeyup="chooseLeftKey(window.event)" readonly>
            <br />
            <br />
            <label><b>Right key</b></label>
            <input id="rightKey" type="text" value="ArrowRight" onkeyup="chooseRightKey(window.event)" readonly>
            <br />
            <p>If you want to play with the arrows keys click <a onclick="resetKeys()" href="#">Here</a>.</p>
            <br />
            <br />
            <br />
            <button onclick="checkKeys()">Start Game</button>
            <button onclick="RandomSettings()">Random</button>
        </div>
    </div>

    <div id="footer">
        This game made by Yarden Ozeri and Neta Rosenfeld.
        <br />
        For any problem you can contact us by email to netarose@post.bgu.ac.il.
    </div>


    <script type="text/javascript">
        var context = canvas.getContext("2d");
        var shape = new Object();
        var board;
        var score;
        var pac_color;
        var start_time;
        var time_elapsed;
        var max_time;
        var interval;
        var users = new Array("a");
        var passwords = new Array("a");
        var currentUser;
        var lives;
        var upKey;
        var downKey;
        var leftKey;
        var rightKey;
        var lastKeyPressed;
        var finishScore;
        var numOfMonsters;
        var eatMoney;
        var eatMonster;

        var wall = new Image();// number 4
        wall.src = "gallery/ice.jpg";

        var ghost1 = new Image();// number 1
        ghost1.src = "gallery/night1.png";
        var ghost1Block;
        var ghost1Index;

        var ghost2 = new Image();// number 1
        ghost2.src = "gallery/night2.png";
        var ghost2Block;
        var ghost2Index;

        var ghost3 = new Image();// number 1
        ghost3.src = "gallery/night3.png";
        var ghost3Block;
        var ghost3Index;

        var money = new Image();//number 3
        money.src = "gallery/money.png";
        var moneyBlock;
        var moneyIndex;

        var ghostCounter;
        var aboutDialog;

        showWelcome();

        $('#menuA').click(function(){

            window.removeEventListener("click", closeAbout);
            aboutDialog = window.open("about.htm", "", "width=400,height=300");
            setTimeout(function(){ window.addEventListener("click", closeAbout); }, 100);
        });
        function closeAbout(){
            aboutDialog.close();
        }

        function Start() {
            board = new Array();
            score = 0;
            pac_color = "yellow";
            var cnt = 100;
            var food_remain = document.getElementById("NumOfBalls").value;
            numOfMonsters = document.getElementById("NumOfMonsters").value;
            var balls5 = Math.floor(food_remain * 0.6);
            var balls15 = Math.floor(food_remain * 0.3);
            var balls25 = Math.floor(food_remain * 0.1);
            var pacman_remain = 1;
            start_time = new Date();
            max_time = document.getElementById("gameTime").value;
            lives = 3;
            finishScore = 25 * balls25 + 15 * balls15 + 5 * (food_remain - balls25 - balls15);

            ghost1Block = 0;
            ghost1Index = new Array(0, 0);
            ghost2Block = 0;
            ghost2Index = new Array(9, 9);
            ghost3Block = 0;
            ghost3Index = new Array(0, 9);
            moneyBlock = 0;
            moneyIndex = new Array(9, 0);
            eatMoney = false;
            eatMonster = false;

            ghostCounter = 0;

            for (var i = 0; i < 10; i++) {
                board[i] = new Array();
                //put obstacles in (i=3,j=3) and (i=3,j=4) and (i=3,j=5), (i=6,j=1) and (i=6,j=2)
                for (var j = 0; j < 10; j++) {
                    if((i === 0 && j === 0) && (numOfMonsters == 1)){
                        board[i][j] = 1;
                    } else if(((i === 0 && j === 0) || (i === 9 && j === 9)) && (numOfMonsters == 2)){
                        board[i][j] = 1;
                    } else if(((i === 0 && j === 0) || (i === 9 && j === 9) || (i === 0 && j === 9)) && (numOfMonsters == 3)){
                        board[i][j] = 1;
                    } else if(i === 9 && j === 0){ //money
                        board[i][j] = 3;
                    } else if ((i === 3 && j === 3) || (i === 3 && j === 4) || (i === 3 && j === 5) || (i === 6 && j === 1) || (i === 6 && j === 2)) { //wall
                        board[i][j] = 4;
                    } else {
                        var randomNum = Math.random();
                        if (randomNum <= 1.0 * food_remain / cnt) {
                            if (balls25> 0){
                                board[i][j] = 7;
                                balls25--;
                            }
                            else if (balls15){
                                board[i][j] = 6;
                                balls15--;
                            }
                            else{
                                board[i][j] = 5;
                                balls5--;
                            }
                            food_remain--;
                        } else if (randomNum < 1.0 * (pacman_remain + food_remain) / cnt) {
                            shape.i = i;
                            shape.j = j;
                            pacman_remain--;
                            board[i][j] = 2;
                        } else {
                            board[i][j] = 0;
                        }
                        cnt--;
                    }
                }
            }
            while (food_remain > 0) {
                var emptyCell = findRandomEmptyCell(board);
                if (balls25 > 0) {
                    board[emptyCell[0]][emptyCell[1]] = 7;
                    balls25--;
                }
                else if (balls15) {
                    board[emptyCell[0]][emptyCell[1]] = 6;
                    balls15--;
                }
                else {
                    board[emptyCell[0]][emptyCell[1]] = 5;
                    balls5--;
                }
                food_remain--;
            }
            keysDown = {};
            addEventListener("keydown", function (e) {
                keysDown[e.code] = true;
            }, false);
            addEventListener("keyup", function (e) {
                keysDown[e.code] = false;
            }, false);
            window.addEventListener("keydown", function (e) {
                if ([37, 38, 39, 40].indexOf(e.keyCode) > -1) {
                    e.preventDefault();
                }
            }, false);
            interval = setInterval(UpdatePosition, 90);
        }


        function findRandomEmptyCell(board) {
            var i = Math.floor((Math.random() * 9) + 1);
            var j = Math.floor((Math.random() * 9) + 1);
            while (board[i][j] !== 0) {
                i = Math.floor((Math.random() * 9) + 1);
                j = Math.floor((Math.random() * 9) + 1);
            }
            return [i, j];
        }

        /**
         * @return {number}
         */
        function GetKeyPressed() {
            if (keysDown[upKey]) {
                return 1;
            }
            if (keysDown[downKey]) {
                return 2;
            }
            if (keysDown[leftKey]) {
                return 3;
            }
            if (keysDown[rightKey]) {
                return 4;
            }
        }

        function Draw() {
            context.clearRect(0, 0, canvas.width, canvas.height); //clean board
            lblScore.value = score;
            lblTime.value = time_elapsed;
            lblUser.value = currentUser
            lblLives.value = lives;
            for (var i = 0; i < 10; i++) {
                for (var j = 0; j < 10; j++) {
                    var center = new Object();
                    center.x = i * 60 + 30;
                    center.y = j * 60 + 30;
                    if (board[i][j] === 2 && shape.i == i && shape.j == j) {
                        var direction = 0;
                        var eyeY = 0;
                        var eyeX = 0;
                        if (lastKeyPressed === 1) {
                            direction = -0.5 * Math.PI;
                            eyeX = -20;
                            eyeY = 5;
                        } else if (lastKeyPressed === 2) {
                            direction = 0.5 * Math.PI;
                            eyeX = -20;
                            eyeY = 20;
                        } else if (lastKeyPressed === 3) {
                            direction = Math.PI;
                            eyeX = -10;
                        }
                        context.beginPath();
                        context.arc(center.x, center.y, 30, 0.15 * Math.PI + direction, 1.85 * Math.PI + direction); // half circle
                        context.lineTo(center.x, center.y);
                        context.fillStyle = pac_color; //color
                        context.fill();
                        context.beginPath();
                        context.arc(center.x + 5 + eyeX, center.y - 15 + eyeY, 5, 0, 2 * Math.PI); // circle
                        context.fillStyle = "black"; //color
                        context.fill();
                    } else if (board[i][j] === 1) {
                        if(numOfMonsters == 1){
                            context.drawImage(ghost1, i*60, j*60);
                        }
                        if(numOfMonsters == 2){
                            if((i == ghost1Index[0]) && (j == ghost1Index[1])){
                                context.drawImage(ghost1, i*60, j*60);
                            } else if((i == ghost2Index[0]) && (j == ghost2Index[1])){
                                context.drawImage(ghost2, i*60, j*60);
                            }
                        }
                        if(numOfMonsters == 3){
                            if((i == ghost1Index[0]) && (j == ghost1Index[1])){
                                context.drawImage(ghost1, i*60, j*60);
                            } else if((i == ghost2Index[0]) && (j == ghost2Index[1])){
                                context.drawImage(ghost2, i*60, j*60);
                            } else if((i == ghost3Index[0]) && (j == ghost3Index[1])){
                                context.drawImage(ghost3, i*60, j*60);
                            }
                        }
                    } else if(board[i][j] === 3){
                        context.drawImage(money, i*60, j*60);
                    } else if (board[i][j] === 4) {
                        context.drawImage(wall, i*60, j*60);
                        /*
                        context.beginPath();
                        context.rect(center.x - 30, center.y - 30, 60, 60);
                        context.fillStyle = "grey"; //color
                        context.fill();
                        */
                    } else if (board[i][j] === 5) {
                        context.beginPath();
                        context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                        context.fillStyle = document.getElementById("5Ball").value; //color
                        context.fill();
                    } else if (board[i][j] === 6) {
                        context.beginPath();
                        context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                        context.fillStyle = document.getElementById("15Ball").value; //color
                        context.fill();
                    } else if (board[i][j] === 7) {
                        context.beginPath();
                        context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                        context.fillStyle = document.getElementById("25Ball").value; //color
                        context.fill();
                    }
                }
            }

        }

        function UpdatePosition() {
            if(board[shape.i][shape.j] != 1 && board[shape.i][shape.j] != 3)
                board[shape.i][shape.j] = 0;
            var x = GetKeyPressed();
            if(x>0 && x<5)
                lastKeyPressed = x;
            if (x === 1) {
                if (shape.j > 0 && board[shape.i][shape.j - 1] !== 4) {
                    shape.j--;
                }
            }
            if (x === 2) {
                if (shape.j < 9 && board[shape.i][shape.j + 1] !== 4) {
                    shape.j++;
                }
            }
            if (x === 3) {
                if (shape.i > 0 && board[shape.i - 1][shape.j] !== 4) {
                    shape.i--;
                }
            }
            if (x === 4) {
                if (shape.i < 9 && board[shape.i + 1][shape.j] !== 4) {
                    shape.i++;
                }
            }
            if (board[shape.i][shape.j] === 5) {
                score += 5;
            }
            if (board[shape.i][shape.j] === 6) {
                score += 15;
            }
            if (board[shape.i][shape.j] === 7) {
                score += 25;
            }
            if (board[shape.i][shape.j] === 1) {
                score -= 10;
                finishScore -= 10;
                lives -= 1;
                eatMonster = true;

                if(numOfMonsters == 1){
                    if(ghost1Block == 2)
                        board[ghost1Index[0]][ghost1Index[1]] = 0;
                    else
                        board[ghost1Index[0]][ghost1Index[1]] = ghost1Block;
                    ghost1Block = 0;
                    ghost1Index[0] = 0;
                    ghost1Index[1] = 0;
                    board[0][0] = 1;
                } else if(numOfMonsters == 2){
                    if(ghost1Block == 2)
                        board[ghost1Index[0]][ghost1Index[1]] = 0;
                    else
                        board[ghost1Index[0]][ghost1Index[1]] = ghost1Block;
                    ghost1Block = 0;
                    ghost1Index[0] = 0;
                    ghost1Index[1] = 0;
                    board[0][0] = 1;

                    if(ghost2Block == 2)
                        board[ghost2Index[0]][ghost2Index[1]] = 0;
                    else
                        board[ghost2Index[0]][ghost2Index[1]] = ghost2Block;
                    ghost2Block = 0;
                    ghost2Index[0] = 9;
                    ghost2Index[1] = 9;
                    board[9][9] = 1;
                } else if(numOfMonsters == 3){
                    if(ghost1Block == 2)
                        board[ghost1Index[0]][ghost1Index[1]] = 0;
                    else
                        board[ghost1Index[0]][ghost1Index[1]] = ghost1Block;
                    ghost1Block = 0;
                    ghost1Index[0] = 0;
                    ghost1Index[1] = 0;
                    board[0][0] = 1;

                    if(ghost2Block == 2)
                        board[ghost2Index[0]][ghost2Index[1]] = 0;
                    else
                        board[ghost2Index[0]][ghost2Index[1]] = ghost2Block;
                    ghost2Block = 0;
                    ghost2Index[0] = 9;
                    ghost2Index[1] = 9;
                    board[9][9] = 1;

                    if(ghost3Block == 2)
                        board[ghost3Index[0]][ghost3Index[1]] = 0;
                    else
                        board[ghost3Index[0]][ghost3Index[1]] = ghost3Block;
                    ghost3Block = 0;
                    ghost3Index[0] = 0;
                    ghost3Index[1] = 9;
                    board[0][9] = 1;
                }
                var pos = findRandomEmptyCell(board);
                shape.i = pos[0];
                shape.j = pos[1];
                board[shape.i][shape.j] = 2;

            }
            if (!eatMoney && (board[shape.i][shape.j] === 3)) {
                score += 50;
                finishScore += 50;
                eatMoney = true;
                if(moneyBlock == 5)
                    score += 5;
                if(moneyBlock == 6)
                    score += 15;
                if(moneyBlock == 7)
                    score += 25;
                document.getElementById("dracarys").play();
            }
            if(!eatMonster){
                board[shape.i][shape.j] = 2;
            }
            eatMonster = false;
            var currentTime = new Date();
            time_elapsed = (currentTime - start_time) / 1000;
            if (time_elapsed >= max_time) {
                window.clearInterval(interval);
                Draw();
                document.getElementById("music").muted = true;
                if (score < 150){
                    document.getElementById("lose").play();
                    window.setTimeout(function () { alert("You can do better."); }, 100);
                }
                else{
                    document.getElementById("win").play();
                    window.setTimeout(function () { alert("We have a winner!"); }, 100);
                }
            } else if (score === finishScore) {
                window.clearInterval(interval);
                Draw();
                document.getElementById("music").muted = true;
                document.getElementById("win").play();
                window.setTimeout(function () { alert("We have a winner!"); },100);
            } else if(lives ==0){
                window.clearInterval(interval);
                Draw();
                document.getElementById("music").muted = true;
                document.getElementById("lose").play();
                window.setTimeout(function () { alert("You loose, try again."); }, 100);
            } else {
                Draw();
            }
            ghostCounter += 1;
            if(ghostCounter == 11){
                ghostCounter = 0;
                UpdateGhostsPosition();
            }
        }

        function UpdateGhostsPosition(){
            if(numOfMonsters == 1){
                if(ghost1Block != 3 && ghost1Block != 1)
                    board[ghost1Index[0]][ghost1Index[1]] = ghost1Block;
                var pos1 = findGhostMove(ghost1Index[0], ghost1Index[1]);
                ghost1Index[0] = pos1[0];
                ghost1Index[1] = pos1[1];
                ghost1Block = board[pos1[0]][pos1[1]];
                board[pos1[0]][ pos1[1]] = 1;
            } else if(numOfMonsters == 2){
                if(ghost1Block != 3  && ghost1Block != 1)
                    board[ghost1Index[0]][ghost1Index[1]] = ghost1Block;
                var pos1 = findGhostMove(ghost1Index[0], ghost1Index[1]);
                ghost1Index[0] = pos1[0];
                ghost1Index[1] = pos1[1];
                ghost1Block = board[pos1[0]][pos1[1]];
                board[pos1[0]][pos1[1]] = 1;

                if(ghost2Block != 3 && ghost2Block != 1)
                    board[ghost2Index[0]][ghost2Index[1]] = ghost2Block;
                var pos2 = findGhostMove(ghost2Index[0], ghost2Index[1]);
                ghost2Index[0] = pos2[0];
                ghost2Index[1] = pos2[1];
                ghost2Block = board[pos2[0]][pos2[1]];
                board[pos2[0]][pos2[1]] = 1;
            } else if(numOfMonsters == 3){
                if(ghost1Block != 3 && ghost1Block != 1)
                    board[ghost1Index[0]][ghost1Index[1]] = ghost1Block;
                var pos1 = findGhostMove(ghost1Index[0], ghost1Index[1]);
                ghost1Index[0] = pos1[0];
                ghost1Index[1] = pos1[1];
                ghost1Block = board[pos1[0]][pos1[1]];
                board[pos1[0]][pos1[1]] = 1;

                if(ghost2Block != 3 && ghost2Block != 1)
                    board[ghost2Index[0]][ghost2Index[1]] = ghost2Block;
                var pos2 = findGhostMove(ghost2Index[0], ghost2Index[1]);
                ghost2Index[0] = pos2[0];
                ghost2Index[1] = pos2[1];
                ghost2Block = board[pos2[0]][pos2[1]];
                board[pos2[0]][pos2[1]] = 1;

                if(ghost3Block != 3 && ghost3Block != 1)
                    board[ghost3Index[0]][ghost3Index[1]] = ghost3Block;
                var pos3 = findGhostMove(ghost3Index[0], ghost3Index[1]);
                ghost3Index[0] = pos3[0];
                ghost3Index[1] = pos3[1];
                ghost3Block = board[pos3[0]][pos3[1]];
                board[pos3[0]][pos3[1]] = 1;
            }

            if(!eatMoney){
                if(moneyBlock != 1)
                    board[moneyIndex[0]][moneyIndex[1]] = moneyBlock;
                var posMoney = findMoneyMove(moneyIndex[0], moneyIndex[1]);
                moneyBlock = board[posMoney[0]][posMoney[1]];
                if(board[moneyIndex[0]][moneyIndex[1]] == 1)
                    board[moneyIndex[0]][moneyIndex[1]] = 1;
                moneyIndex[0] = posMoney[0];
                moneyIndex[1] = posMoney[1];
                if(board[moneyIndex[0]][moneyIndex[1]] != 1)
                    board[posMoney[0]][posMoney[1]] = 3;
            }
        }

        function findGhostMove(x, y){
            var right = 20;
            var left = 20;
            var up = 20;
            var down = 20;
            if((x+1 < 10) && (board[x+1][y] != 4) && (board[x+1][y] != 1)){
                right = Math.abs((x+1) - shape.i) + Math.abs(y - shape.j);
            }
            if((x-1 >= 0) && (board[x-1][y] != 4) && (board[x-1][y] != 1)){
                left = Math.abs((x-1) - shape.i) + Math.abs(y - shape.j);
            }
            if((y+1 < 10) && (board[x][y+1] != 4) && (board[x][y+1] != 1)){
                down = Math.abs(x - shape.i) + Math.abs((y+1) - shape.j);
            }
            if((y-1 >= 0) && (board[x][y-1] != 4) && (board[x][y-1] != 1)){
                up = Math.abs(x - shape.i) + Math.abs((y-1) - shape.j);
            }

            if((right<=left) && (right<=up) && (right<=down)){
                return [x+1, y];
            }
            if((left<=right) && (left<=up) && (left<=down)){
                return [x-1, y];
            }
            if((up<=left) && (up<=right) && (up<=down)){
                return [x, y-1];
            }
            return [x, y+1];
        }

        function findMoneyMove(x, y){
            var rnd = Math.random();
            var newPos = new Array(-1 , -1);

            while(newPos[0] == -1){
                rnd = Math.random();
                if((rnd >= 0 && rnd < 0.25) && (x+1 < 10) && (board[x+1][y] != 4)){
                    newPos[0] = x+1;
                    newPos[1] = y;
                }
                if((rnd >= 0.25 && rnd < 0.5) && (x-1 >= 0) && (board[x-1][y] != 4)){
                    newPos[0] = x-1;
                    newPos[1] = y;
                }
                if((rnd >= 0.5 && rnd < 0.75) && (y+1 < 10) && (board[x][y+1] != 4)){
                    newPos[0] = x;
                    newPos[1] = y+1;
                }
                if((rnd >= 0.75 && rnd < 1) && (y-1 >= 0) && (board[x][y-1] != 4)){
                    newPos[0] = x;
                    newPos[1] = y-1;
                }
            }

            return newPos;
        }

        function showSettings() {
            document.getElementById("settings").style.display = "block";
            document.getElementById("game").style.display = "none";
            document.getElementById("welcome").style.display = "none";
            document.getElementById("register").style.display = "none";
            document.getElementById("login").style.display = "none";
            //document.getElementById("about").style.display = "none";
        }

        function showGame() {
            window.clearInterval(interval);
            Start();
            document.getElementById("music").currentTime = 0;
            document.getElementById("music").muted = false;
            document.getElementById("music").loop = true;
            document.getElementById("music").play();
            document.getElementById("settings").style.display = "none";
            document.getElementById("game").style.display = "block";
            document.getElementById("welcome").style.display = "none";
            document.getElementById("register").style.display = "none";
            document.getElementById("login").style.display = "none";
            //document.getElementById("about").style.display = "none";
        }

        function showWelcome() {
            window.clearInterval(interval);
            document.getElementById("music").muted = true;
            document.getElementById("settings").style.display = "none";
            document.getElementById("game").style.display = "none";
            document.getElementById("welcome").style.display = "block";
            document.getElementById("register").style.display = "none";
            document.getElementById("login").style.display = "none";
            //document.getElementById("about").style.display = "none";
        }

        function showRegister() {
            window.clearInterval(interval);
            document.getElementById("music").muted = true;
            document.getElementById("settings").style.display = "none";
            document.getElementById("game").style.display = "none";
            document.getElementById("welcome").style.display = "none";
            document.getElementById("register").style.display = "block";
            document.getElementById("login").style.display = "none";
            //document.getElementById("about").style.display = "none";
            $('#username').attr({'required': true});
            $('#password').attr({'pattern': "(?=.\d)(?=.[a-z]).{8,}", 'title': "Must contain at least one number and one lowercase letter, and at least 8 or more characters", 'required':true});
            $('#firstName').attr({'pattern':"[A-Za-z]{1,}", 'title':"first name must contain only letters", 'required': true});
            $('#lastName').attr({'pattern': "[A-Za-z]{1,}", 'title': "last name must contain only letters", 'required': true});
            $('#email').attr({'type':"email", 'title': "Must contain @, and  at least one character before and after the @.", 'required': true});
            $('#birthday').attr({'type': "date", 'required': true});
        }

        function showLogin() {
            window.clearInterval(interval);
            document.getElementById("music").muted = true;
            document.getElementById("settings").style.display = "none";
            document.getElementById("game").style.display = "none";
            document.getElementById("welcome").style.display = "none";
            document.getElementById("register").style.display = "none";
            document.getElementById("login").style.display = "block";
            //document.getElementById("about").style.display = "none";
        }

        function showAbout() {
            window.clearInterval(interval);
            document.getElementById("music").muted = true;
            document.getElementById("settings").style.display = "none";
            document.getElementById("game").style.display = "none";
            document.getElementById("welcome").style.display = "none";
            document.getElementById("register").style.display = "none";
            document.getElementById("login").style.display = "none";
            document.getElementById("about").style.display = "block";
        }

        function addNewUser() {
            var username = document.getElementById("username")
            var password = document.getElementById("password")

            if($('#username').val() == ""){
                window.alert("Please enter a username");
                return;
            }
            for (var i = 0; i < users.length; i++) {
                if (users.indexOf(username.value) > -1) {
                    window.alert("This username is allready exist.Please choose other one");
                    return;
                }
            }
            if($('#password').val().length < 8 || !(/\d/.test($('#password').val())) || !(/[a-z]/.test(($('#password').val()).toLowerCase()))){
                window.alert("Please enter a valid password");
                return;
            }
            if($('#firstName').val() == "" || /\d/.test($('#firstName').val())){
                window.alert("Please enter a valid first name");
                return;
            }
            if($('#lastName').val() == "" || /\d/.test($('#lastName').val())){
                window.alert("Please enter a valid last name");
                return;
            }
            if($('#email').val() == "" || $('#email').val().length < 3 || !($('#email').val().includes("@")) || $('#email').val().charAt(0) == '@' || $('#email').val().charAt($('#email').val().length-1) == '@'){
                window.alert("Please enter a valid email");
                return;
            }
            if($('#birthday').val() == ""){
                window.alert("Please enter a birthday");
                return;
            }

            users.push(username.value);
            passwords.push(password.value);
            currentUser = username.value;
            showSettings();
        }

        function login() {
            var username = document.getElementById("username_login");
            var password = document.getElementById("password_login");

            if(username.value == "" || password.value == ""){
                window.alert("You must fill all the fields");
                return;
            }

            var index = users.indexOf(username.value);
            if (index == -1) {
                window.alert("This username is not exist");
                return;
            }
            if (passwords[index] != password.value) {
                window.alert("Incorrect password");
                return;
            }
            currentUser = username.value;
            showSettings();
        }

        function RandomSettings() {
            document.getElementById("5Ball").value = getRandomColor();
            document.getElementById("15Ball").value = getRandomColor();
            document.getElementById("25Ball").value = getRandomColor();
            document.getElementById("NumOfBalls").value = getRndInteger(50, 90);
            document.getElementById("gameTime").value = getRndInteger(60, 600);
            document.getElementById("NumOfMonsters").value = getRndInteger(1, 3);
            resetKeys();
        }

        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        function getRndInteger(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        function chooseUpKey(e) {
            document.getElementById("upKey").value = e.code;
        }
        function chooseDownKey(e) {
            document.getElementById("downKey").value = e.code;  
        }
        function chooseLeftKey(e) {
            document.getElementById("leftKey").value = e.code;
        }
        function chooseRightKey(e) {
            document.getElementById("rightKey").value = e.code;
        }

        function resetKeys() {
            document.getElementById("upKey").value = "ArrowUp";
            document.getElementById("downKey").value = "ArrowDown";
            document.getElementById("leftKey").value = "ArrowLeft";
            document.getElementById("rightKey").value = "ArrowRight";
        }

        function checkKeys() {
            var up = document.getElementById("upKey").value;
            var down = document.getElementById("downKey").value;
            var left = document.getElementById("leftKey").value;
            var right = document.getElementById("rightKey").value;
            if (up == down || up == left || up == right || down == left || down == right || left == right) {
                window.alert("You can't choose the same key for more than one action");
                return;
            }
            upKey = up;
            downKey = down;
            leftKey = left;
            rightKey = right;
            showGame();
        }

    </script>
</body>

</html>